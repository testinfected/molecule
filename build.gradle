buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }

  dependencies {
      classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7'
      classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
      classpath 'org.kordamp.gradle:stats-gradle-plugin:0.1.1'
  }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'org.kordamp.gradle.stats'
apply from: 'gradle/publish.gradle'

defaultTasks 'build'

group = 'com.vtence.molecule'
version = '0.15.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def libs = [
        simple            : 'org.simpleframework:simple-http:6.0.1',
        undertow          : 'io.undertow:undertow-core:2.2.2.Final',
        jmustache         : 'com.samskivert:jmustache:1.15',
        hamcrest          : 'org.hamcrest:hamcrest:2.2',
        junit             : 'junit:junit:4.13.1@jar',
        jmock             : ['org.jmock:jmock:2.12.0@jar',
                            'org.jmock:jmock-junit4:2.12.0@jar'],
        juniversal_chardet: 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3',
]

repositories {
  mavenCentral()
}

test {
    testLogging {
        events "skipped", "failed"
        exceptionFormat "full"
    }
}

dependencies {
  compile libs.simple, optional
  compile libs.undertow, optional
  compile libs.jmustache, optional

  // For the testing package
  compile libs.hamcrest, optional
  compile libs.juniversal_chardet, optional

  testCompile libs.junit
  testCompile libs.jmock
  testCompile libs.juniversal_chardet
}

compileJava.options.encoding = 'UTF-8'

task 'version' {
  doLast {
     println version
  }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }

    // Exclude testing package from the report
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/testing/**')
        })
    }
}

task coverage(dependsOn: ['test', 'jacocoTestReport'])
